name: simulated
snr: 600
no_noise: false # Set to true to generate noiseless signals for testing
noise_realizations: 5
spectrum_pairs:
  npz_default:
    diff_values: [0.25, 0.50, 0.75, 1.00, 1.25, 1.50, 2.00, 2.50, 3.00, 20.00]
    true_spectrum:
      [
        0.05945799,
        0.02641201,
        0.02361821,
        0.02742875,
        0.03580195,
        0.04681715,
        0.15748524,
        0.24156552,
        0.32841393,
        0.05299925,
      ]
  ntz_default:
    diff_values: [0.25, 0.50, 0.75, 1.00, 1.25, 1.50, 2.00, 2.50, 3.00, 20.00]
    true_spectrum:
      [
        0.08907393,
        0.02943757,
        0.02949968,
        0.03749999,
        0.05864604,
        0.08068787,
        0.17944858,
        0.22199649,
        0.19952549,
        0.07418436,
      ]
  tpz_default:
    diff_values: [0.25, 0.50, 0.75, 1.00, 1.25, 1.50, 2.00, 2.50, 3.00, 20.00]
    true_spectrum:
      [
        0.17862015,
        0.03372368,
        0.03166436,
        0.04559317,
        0.07150924,
        0.12543983,
        0.18664118,
        0.15819804,
        0.11501056,
        0.0535998,
      ]
  ttz_default:
    diff_values: [0.25, 0.50, 0.75, 1.00, 1.25, 1.50, 2.00, 2.50, 3.00, 20.00]
    true_spectrum:
      [
        0.26690788,
        0.03690806,
        0.03827977,
        0.05845508,
        0.10251014,
        0.1161373,
        0.13010999,
        0.09558901,
        0.07733034,
        0.07777243,
      ]
  ttz_newdiff1:
    diff_values: [0.25, 0.5, 0.75, 1.0, 1.5, 2.0, 3.0] # Example new discretization
    true_spectrum: [
        0.26690788,
        0.03690806,
        0.03827977,
        0.05845508,
        0.1161373,
        0.13010999,
        0.07733034,
      ] # Example, update as needed
  ttz_newdiff2:
    diff_values: [0.25, 0.5, 0.75, 1.0, 1.5, 2.0, 3.0] # Example new discretization
    true_spectrum: [
        0.26690788,
        0.03690806,
        0.03827977,
        0.05845508,
        0.1161373,
        0.13010999,
        0.07733034,
      ] # Example, update as needed
  convergence_test:
    # Focused range excluding extremes - remove very slow (0.25) and very fast (20.0)
    # This should improve conditioning and reduce boundary sampling issues
    diff_values: [0.5, 0.75, 1.0, 1.25, 1.5, 2.0, 2.5, 3.0]
    true_spectrum: [0.15, 0.10, 0.15, 0.20, 0.15, 0.15, 0.08, 0.02]
  convergence_test_no_slow:
    # Remove d=0.5 which is poorly identified
    diff_values: [0.75, 1.0, 1.25, 1.5, 2.0, 2.5, 3.0]
    true_spectrum: [0.10, 0.15, 0.20, 0.15, 0.15, 0.08, 0.02]
  reduced_4buckets:
    # Optimal 4-bucket configuration based on SVD analysis
    # Condition number κ = 109 (vs 4.6×10⁶ for 8 buckets)
    # All parameters are well-identified
    diff_values: [0.5, 1.0, 2.0, 3.0]
    true_spectrum: [0.15, 0.30, 0.40, 0.15]
  # ========================================================================
  # DEBUG CONFIGURATIONS - Systematic testing from simple to complex
  # ========================================================================
  debug_2buckets_far:
    # SIMPLEST CASE: 2 buckets very far apart, equal weight
    # Should ALWAYS work - if this fails, Gibbs is broken
    diff_values: [0.5, 3.0]
    true_spectrum: [0.5, 0.5]
  debug_2buckets_far_unequal:
    # 2 buckets far apart, unequal weight
    diff_values: [0.5, 3.0]
    true_spectrum: [0.8, 0.2]
  debug_2buckets_close:
    # 2 buckets closer together
    diff_values: [1.0, 2.0]
    true_spectrum: [0.5, 0.5]
  debug_2buckets_very_close:
    # 2 buckets very close - testing identifiability
    diff_values: [1.0, 1.5]
    true_spectrum: [0.5, 0.5]
  debug_3buckets:
    # 3 buckets well-separated
    diff_values: [0.5, 1.5, 3.0]
    true_spectrum: [0.33, 0.34, 0.33]
  debug_4buckets_even:
    # 4 buckets with EQUAL weight (vs concentrated)
    diff_values: [0.5, 1.0, 2.0, 3.0]
    true_spectrum: [0.25, 0.25, 0.25, 0.25]
  debug_8buckets_even:
    # 8 buckets with EQUAL weight
    diff_values: [0.25, 0.5, 0.75, 1.0, 1.5, 2.0, 2.5, 3.0]
    true_spectrum: [0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]
spectrum_pair: npz_default # select which pair to use
b_values:
  [0., 0.25, 0.5, 0.75, 1., 1.25, 1.5, 1.75, 2., 2.25, 2.5, 2.75, 3., 3.25, 3.5]
